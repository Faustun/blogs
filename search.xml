<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[日期对象]]></title>
      <url>/blogs/2017/12/13/date/</url>
      <content type="html"><![CDATA[<p>时间对象，时间戳， new Date()<br><a id="more"></a></p>
<p>获取到的是本地时间，时间对象下有一些方法，可以让我们获取或者设置时间</p>
<p>1970年1月1日00:00:00格林尼治时间</p>
<p>注意：月从0开始，0是一月，11是十二月</p>
<blockquote>
<ul>
<li>设置时间对象3种格式</li>
<li>1.数字，用逗号分隔（年,月,日,时,分,秒）</li>
<li>2.字符串,月份英文或缩写,首字母大小写都行，用逗号或者空格分隔(月 日 年 时:分:秒)</li>
<li>3.对象,时间对象</li>
</ul>
</blockquote>
<h3 id="获取时间"><a href="#获取时间" class="headerlink" title="获取时间"></a>获取时间</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  获取时间,数字类型</div><div class="line"> *      getFullYear() <span class="comment">-- 年</span></div><div class="line"> *      getMonth()    <span class="comment">-- 月（从0开始，0就是一月）</span></div><div class="line"> *      getDate()     <span class="comment">-- 日</span></div><div class="line"> *      getDay()      <span class="comment">-- 星期几（星期一就是1,星期日是0）</span></div><div class="line"> *      getHours()    <span class="comment">-- 小时 </span></div><div class="line"> *      getMinutes()  <span class="comment">-- 分</span></div><div class="line"> *      getSeconds()  <span class="comment">-- 秒</span></div><div class="line"> *      getMilliseconds()<span class="comment">--毫秒</span></div><div class="line"> *      getTime()     <span class="comment">--时间，当前时间距离1970年1月1日00:00:00的毫秒时间差</span></div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="设置时间"><a href="#设置时间" class="headerlink" title="设置时间"></a>设置时间</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  设置时间</div><div class="line"> *      setFullYear() <span class="comment">-- 年</span></div><div class="line"> *      setMonth()    <span class="comment">-- 月（从0开始，0就是一月）</span></div><div class="line"> *      setDate()     <span class="comment">-- 日</span></div><div class="line"> *      setHours()    <span class="comment">-- 小时 </span></div><div class="line"> *      setMinutes()  <span class="comment">-- 分</span></div><div class="line"> *      setSeconds()  <span class="comment">-- 秒</span></div><div class="line"> *      setMilliseconds()<span class="comment">--毫秒</span></div><div class="line"> *      setTime()     <span class="comment">--时间，当前时间距离1970年1月1日00:00:00的毫秒时间差</span></div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">2016</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">10</span>];</div><div class="line"><span class="comment">//2016年10月1日10时1分10秒</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">arr,n</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> s = <span class="string">''</span>;</div><div class="line">    <span class="keyword">var</span> n = n || <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> aStr = [<span class="string">'年月日时分秒'</span>,<span class="string">'-- ::'</span>,<span class="string">'// ::'</span>];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</div><div class="line">        s += arr[i]+aStr[n].charAt(i);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> s;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(fn(arr))</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[字符串常用方法]]></title>
      <url>/blogs/2017/12/11/string/</url>
      <content type="html"><![CDATA[<p>字符串：由0个或多个字符组成的串，只能读取，不能设置。<br><a id="more"></a></p>
<blockquote>
<ul>
<li>string.方法名(参数1,[参数2])，返回值类型</li>
<li>参数列表</li>
<li>[]:可选参数</li>
</ul>
</blockquote>
<h3 id="charAt"><a href="#charAt" class="headerlink" title="charAt()"></a>charAt()</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  <span class="built_in">string</span>.charAt(<span class="built_in">index</span>)，String</div><div class="line"> * 作用：查找字符串某一位置是什么字符</div><div class="line"> * 参数：</div><div class="line"> *  <span class="built_in">index</span>:查找第几位是什么字符串，第一位是<span class="number">0</span></div><div class="line"> * 注意：</div><div class="line"> *  <span class="number">1</span>.只能获取，不能设置</div><div class="line"> *  <span class="number">2</span>.没有这一位，返回空字符串</div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="charCodeAt"><a href="#charCodeAt" class="headerlink" title="charCodeAt()"></a>charCodeAt()</h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  string.charCodeAt(index),Number</div><div class="line"> * 作用：返回字符串某一位字符串的unicode码</div><div class="line"> * 参数：</div><div class="line"> *  index：第几位，从0开始</div><div class="line"> *  [a-z]:97<span class="string">-122</span></div><div class="line"> *  [A-Z]:65<span class="string">-90</span></div><div class="line"> *  [0<span class="string">-9</span>]:48<span class="string">-57</span></div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf()"></a>indexOf()</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">  *  <span class="built_in">string</span>.indexOf(searchValue,[<span class="built_in">index</span>]),Number</div><div class="line">  * 作用：从字符串第一位开始查找指定的字符第一次出现的位置(从左往右)</div><div class="line">  * 参数：</div><div class="line">  *  searchValue：要查找的字符，<span class="built_in">string</span></div><div class="line">  *  [<span class="built_in">index</span>]:从第几位开始找，默认值为<span class="number">0</span></div><div class="line">  * 注意：</div><div class="line">  *  <span class="number">1</span>.没找到指定字符，返回-<span class="number">1</span></div><div class="line">  *  <span class="number">2</span>.不传参数，返回-<span class="number">1</span></div><div class="line">  * */</div></pre></td></tr></table></figure>
<h3 id="lastIndexOf"><a href="#lastIndexOf" class="headerlink" title="lastIndexOf()"></a>lastIndexOf()</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * <span class="built_in">string</span>.lastIndexOf(searchValue,[<span class="built_in">index</span>]),Number</div><div class="line"> * 作用：从字符串最后一位开始查找指定的字符第一次出现的位置(从右往左)</div><div class="line"> * 参数：</div><div class="line"> *   searchValue：要查找的字符，<span class="built_in">string</span></div><div class="line"> *   [<span class="built_in">index</span>]:从第几位开始找，默认值为最后一位</div><div class="line"> * 注意：</div><div class="line"> *   <span class="number">1</span>.没找到指定字符，返回-<span class="number">1</span></div><div class="line"> *   <span class="number">2</span>.不传参数，返回-<span class="number">1</span> </div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="split"><a href="#split" class="headerlink" title="split ()"></a>split ()</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * string.split(<span class="keyword">separate</span>),<span class="keyword">Array</span></div><div class="line"> * 作用：把字符串用指定分隔符分隔，放到数组里返回</div><div class="line"> * 参数：</div><div class="line"> *     <span class="keyword">separate</span>:分隔符</div><div class="line"> *注意：</div><div class="line"> *    <span class="number">1</span>.不传参数，把整个字符串放到数组里返回</div><div class="line"> *    <span class="number">2</span>.分隔符是空字符串''，字符串的每一个字符都是一个结果放到数组里返回</div><div class="line"> *    <span class="number">3</span>.用字符串里没有的字符分隔，把整个字符串放到数组里返回</div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  <span class="keyword">Array</span>.join(<span class="keyword">separate</span>),String</div><div class="line"> *  作用：把数组里的值用分隔符连接成字符串返回</div><div class="line"> * 参数：</div><div class="line"> *    <span class="keyword">separate</span>：连接符</div><div class="line"> * 注意：</div><div class="line"> *      <span class="number">1</span>.不传参数，默认连接符是逗号</div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="toLowerCase"><a href="#toLowerCase" class="headerlink" title="toLowerCase()"></a>toLowerCase()</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * <span class="keyword">string</span>.toLowerCase(),<span class="keyword">String</span></div><div class="line"> * 作用：把字符串里大写变成小写</div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="toUpperCase"><a href="#toUpperCase" class="headerlink" title="toUpperCase()"></a>toUpperCase()</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * <span class="keyword">string</span>.toUpperCase(),<span class="keyword">String</span></div><div class="line"> * 作用：把字符串里小写变成大写</div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这好是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这好是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是一行文字这是好一行文字这是一行文字这是一行文字这是一行文字</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'div'</span>)[<span class="number">0</span>];</span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> val = div.innerHTML;</span></div><div class="line"><span class="actionscript">    div.innerHTML = val.split(<span class="string">'好'</span>).join(<span class="string">'坏'</span>);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="slice"><a href="#slice" class="headerlink" title="slice()"></a>slice()</h3><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  <span class="built_in">string</span>.slice(<span class="keyword">begin</span>,[<span class="keyword">end</span>]),<span class="built_in">string</span></div><div class="line"> *  作用：</div><div class="line"> *      截取字符串中某一段字符片段</div><div class="line"> *  参数：</div><div class="line"> *      <span class="keyword">begin</span>:开始位置</div><div class="line"> *      [<span class="keyword">end</span>]:结束位置,默认是最后一位</div><div class="line"> *  注意：</div><div class="line"> *      <span class="number">1.</span>不传参数，返回整个字符串</div><div class="line"> *      <span class="number">2.</span>从开始位置截取到结束位置，不包括结束位置的字符</div><div class="line"> *      <span class="number">3.</span>结束位置-开始位置 = 截取的字符个数，从开始位置截取几个字符</div><div class="line"> *      <span class="number">4.</span>截取不到，返回空字符串</div><div class="line"> *      <span class="number">5.</span>-<span class="number">1</span>是最后一位</div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="substring"><a href="#substring" class="headerlink" title="substring()"></a>substring()</h3><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  <span class="built_in">string</span>.substring(<span class="keyword">begin</span>,[<span class="keyword">end</span>]),<span class="built_in">string</span></div><div class="line"> *  作用：</div><div class="line"> *      截取字符串中某一段字符片段</div><div class="line"> *  参数：</div><div class="line"> *      <span class="keyword">begin</span>:开始位置</div><div class="line"> *      [<span class="keyword">end</span>]:结束位置,默认是最后一位</div><div class="line"> *  注意：</div><div class="line"> *      <span class="number">1.</span>不传参数，返回整个字符串</div><div class="line"> *      <span class="number">2.</span>从开始位置截取到结束位置，不包括结束位置的字符</div><div class="line"> *      <span class="number">3.</span>结束位置-开始位置 = 截取的字符个数，从开始位置截取几个字符</div><div class="line"> *      <span class="number">4.</span>截取不到，返回空字符串</div><div class="line"> *      <span class="number">5.</span>与slice区别</div><div class="line"> *          a.大小，会自动转成小大</div><div class="line"> *          b.负数</div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  <span class="built_in">string</span>.substr(begin,[<span class="built_in">length</span>]),<span class="built_in">string</span></div><div class="line"> *  作用：</div><div class="line"> *      截取字符串中某一段字符片段</div><div class="line"> *  参数：</div><div class="line"> *      begin:开始位置</div><div class="line"> *      [<span class="built_in">length</span>]：截取长度</div><div class="line"> *  注意：</div><div class="line"> *      <span class="number">1.</span>不传参数，返回整个字符串</div><div class="line"> *      <span class="number">2.</span>从开始位置截取到结束位置，不包括结束位置的字符</div><div class="line"> *      <span class="number">3.</span>结束位置-开始位置 = 截取的字符个数，从开始位置截取几个字符</div><div class="line"> *      <span class="number">4.</span>截取不到，返回空字符串</div><div class="line"> *      <span class="number">5.</span><span class="number">-1</span>是最后一位   </div><div class="line"> * */</div></pre></td></tr></table></figure>
<h3 id="trim"><a href="#trim" class="headerlink" title="trim()"></a>trim()</h3><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> *  <span class="built_in">string</span>.<span class="built_in">trim</span>(),<span class="built_in">string</span></div><div class="line"> *  作用: 去除字符串前后空格</div><div class="line"> * */</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[正则知识点]]></title>
      <url>/blogs/2017/12/08/RegExp/</url>
      <content type="html"><![CDATA[<p>正则的两种写法：</p>
<p>第一种（标准写法）：<br>new RegExp(规则，修饰符)；</p>
<p>第二种（简写）：<br>/规则/<br><a id="more"></a></p>
<blockquote>
<ul>
<li>\d：一个数字</li>
<li>\D：一个非数字</li>
<li>\w：一个数字、字母、下划线</li>
<li>\W：一个非数字、字母、下划线</li>
<li>\n：换行</li>
<li>\s：空格</li>
<li>\S：非空格</li>
<li>\b：边界符</li>
<li>.：任意字符除了\n</li>
<li>[]：在中括号里任意选择一个字符。</li>
<li>[^]：排除</li>
<li>{}：量词范围</li>
<li>{0,1}/?：最小可以没有最大1个</li>
<li>{0,}/*：最小没有，最大无限</li>
<li>{1,}/+：最小1个，最大无限</li>
<li>{n}：固定的次数</li>
<li>修饰符：i -&gt;  忽略大小写。</li>
<li>转义符：\</li>
</ul>
</blockquote>
<h4 id="正则的方法-text"><a href="#正则的方法-text" class="headerlink" title="正则的方法-text"></a>正则的方法-text</h4><p>test:检测是否正则匹配的内容,如果正则成立那么返回一个布尔值。</p>
<blockquote>
<ul>
<li>正则.test(string);</li>
</ul>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">'RegExp'</span>;</div><div class="line"><span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'p'</span>,<span class="string">'i'</span>);</div><div class="line"><span class="built_in">console</span>.log(re.test(str));</div></pre></td></tr></table></figure>
<h4 id="字符串方法-match"><a href="#字符串方法-match" class="headerlink" title="字符串方法-match"></a>字符串方法-match</h4><p>match：将匹配到的字符放到一个数组中。</p>
<p>string.match(正则);</p>
<p>当匹配到的字符只有一个的时候，会显示出多个属性</p>
<p>index: 匹配字符的位置   </p>
<p>input: 所有内容</p>
<p>而length为1</p>
<blockquote>
<ul>
<li>match如果找不到返回null</li>
</ul>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">'das37213dsa321hjkh321321'</span>;</div><div class="line"><span class="built_in">console</span>.log(str.match(<span class="regexp">/\d+/g</span>))</div></pre></td></tr></table></figure>
<h4 id="字符串的方法-search"><a href="#字符串的方法-search" class="headerlink" title="字符串的方法-search"></a>字符串的方法-search</h4><p>search：找到（可以指定也可以正则匹配）匹配的字符位置。</p>
<p>sting.search(字符串||正则);</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">'aacabca523c'</span>;</div><div class="line"><span class="built_in">console</span>.log(str.search(<span class="regexp">/\d/</span>));</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>search如果找不到返回-1</li>
</ul>
</blockquote>
<h4 id="字符串方法-replace"><a href="#字符串方法-replace" class="headerlink" title="字符串方法-replace"></a>字符串方法-replace</h4><p>replace：replace</p>
<p>string.replace(要替换谁||可以用正则,替换成什么||函数);</p>
<p>返回值为替换好的字符串。</p>
<p>注意：<br>如果使用函数，那么一定要有retrun,不然为undefind</p>
<p>一般情况下</p>
<p>函数内的第一个参数是当前匹配的字符。</p>
<p>函数内的第二个参数是当前匹配的索引值。</p>
<p>函数内的第三个参数是当前总的字符串。</p>
<p>函数内的第四个以后参数都为undefined。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">'中国共产党,习近平总书记说：“法轮功是邪教!”'</span>;</div><div class="line">str.replace(<span class="regexp">/中国共产党|习近平|法轮功|邪教/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params">$<span class="number">0</span>,$<span class="number">1</span>,$<span class="number">2</span>,$<span class="number">3</span>,$<span class="number">4</span></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log($<span class="number">0</span>,$<span class="number">1</span>,$<span class="number">2</span>,$<span class="number">3</span>,$<span class="number">4</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="子项"><a href="#子项" class="headerlink" title="子项 - ()"></a>子项 - ()</h4><p>从左往右数</p>
<p>如果正则中有子项</p>
<p>从函数的第一个参数之后就是匹配到的子项值，<br>当参数的个数等于子项个数+1的时候，之后都为正常模式下的参数了(比如：索引，整个字符，undefined..)</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">'2017/2/17'</span>;</div><div class="line"><span class="keyword">var</span> str = str.replace(<span class="regexp">/(\d+)\D+(\d+)\D+(\d+)/</span>,<span class="function"><span class="keyword">function</span>(<span class="params">$<span class="number">0</span>,$<span class="number">1</span>,$<span class="number">2</span>,$<span class="number">3</span></span>)</span>&#123;</div><div class="line">    <span class="comment">//console.log($1,$2,$3);</span></div><div class="line">    <span class="keyword">return</span> $<span class="number">1</span> + <span class="string">'年'</span> + $<span class="number">2</span> + <span class="string">'月'</span> + $<span class="number">3</span> + <span class="string">'日'</span>;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(str);</div></pre></td></tr></table></figure>
<h4 id="子项重定向"><a href="#子项重定向" class="headerlink" title="子项重定向"></a>子项重定向</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">'ssssssssaaaaaabbbbbb'</span>;</div><div class="line">str.replace(<span class="regexp">/(\w)\1+/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params">$<span class="number">0</span>,$<span class="number">1</span></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log($<span class="number">1</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[javascript武器库]]></title>
      <url>/blogs/2017/12/07/library/</url>
      <content type="html"><![CDATA[<blockquote>
<ul>
<li>自己打造一把趁手的武器，高效率完成前端业务代码。</li>
</ul>
</blockquote>
<a id="more"></a>
<p><img src="https://songzhiguo.github.io/lib/images/2964183279-5a06f5964878b_articlex.jpg" alt=""></p>
<h2 id="常用函数总汇"><a href="#常用函数总汇" class="headerlink" title="常用函数总汇"></a>常用函数总汇</h2><h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><h4 id="1-1arrayEqual"><a href="#1-1arrayEqual" class="headerlink" title="1.1arrayEqual"></a>1.1arrayEqual</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 判断两个数组是否相等</span></div><div class="line"><span class="comment"> * @param &#123;Array&#125; arr1 </span></div><div class="line"><span class="comment"> * @param &#123;Array&#125; arr2 </span></div><div class="line"><span class="comment"> * @return &#123;Boolean&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrayEqual</span>(<span class="params">arr1, arr2</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (arr1 === arr2) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    <span class="keyword">if</span> (arr1.length != arr2.length) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr1.length; ++i) &#123;</div><div class="line">        <span class="keyword">if</span> (arr1[i] !== arr2[i]) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-Class"><a href="#2-Class" class="headerlink" title="2.Class"></a>2.Class</h3><h4 id="2-1-hasClass"><a href="#2-1-hasClass" class="headerlink" title="2.1 hasClass"></a>2.1 hasClass</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 判断元素是否有某个class</span></div><div class="line"><span class="comment"> * @param &#123;HTMLElement&#125; ele </span></div><div class="line"><span class="comment"> * @param &#123;String&#125; cls </span></div><div class="line"><span class="comment"> * @return &#123;Boolean&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">ele, cls</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(\\s|^)'</span> + cls + <span class="string">'(\\s|$)'</span>)).test(ele.className);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="2-2-addClass"><a href="#2-2-addClass" class="headerlink" title="2.2 addClass"></a>2.2 addClass</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   为元素添加class</span></div><div class="line"><span class="comment"> * @param  &#123;HTMLElement&#125; ele </span></div><div class="line"><span class="comment"> * @param  &#123;String&#125; cls </span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> hasClass = <span class="built_in">require</span>(<span class="string">'./hasClass'</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addClass</span>(<span class="params">ele, cls</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!hasClass(ele, cls)) &#123;</div><div class="line">        ele.className += <span class="string">' '</span> + cls;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="2-3-removeClass"><a href="#2-3-removeClass" class="headerlink" title="2.3 removeClass"></a>2.3 removeClass</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 为元素移除class</span></div><div class="line"><span class="comment"> * @param &#123;HTMLElement&#125; ele </span></div><div class="line"><span class="comment"> * @param &#123;String&#125; cls </span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> hasClass = <span class="built_in">require</span>(<span class="string">'./hasClass'</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeClass</span>(<span class="params">ele, cls</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (hasClass(ele, cls)) &#123;</div><div class="line">        <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(\\s|^)'</span> + cls + <span class="string">'(\\s|$)'</span>);</div><div class="line">        ele.className = ele.className.replace(reg, <span class="string">' '</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-Cookie"><a href="#3-Cookie" class="headerlink" title="3.Cookie"></a>3.Cookie</h3><h4 id="3-1-getCookie"><a href="#3-1-getCookie" class="headerlink" title="3.1 getCookie"></a>3.1 getCookie</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 根据name读取cookie</span></div><div class="line"><span class="comment"> * @param  &#123;String&#125; name </span></div><div class="line"><span class="comment"> * @return &#123;String&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = <span class="built_in">document</span>.cookie.replace(<span class="regexp">/\s/g</span>, <span class="string">""</span>).split(<span class="string">';'</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</div><div class="line">        <span class="keyword">var</span> tempArr = arr[i].split(<span class="string">'='</span>);</div><div class="line">        <span class="keyword">if</span> (tempArr[<span class="number">0</span>] == name) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(tempArr[<span class="number">1</span>]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="string">''</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-2-removeCookie"><a href="#3-2-removeCookie" class="headerlink" title="3.2 removeCookie"></a>3.2 removeCookie</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> setCookie = <span class="built_in">require</span>(<span class="string">'./setCookie'</span>);</div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 根据name删除cookie</span></div><div class="line"><span class="comment"> * @param  &#123;String&#125; name </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeCookie</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">    <span class="comment">// 设置已过期，系统会立刻删除cookie</span></div><div class="line">    setCookie(name, <span class="string">'1'</span>, <span class="number">-1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-3-setCookie"><a href="#3-3-setCookie" class="headerlink" title="3.3 setCookie"></a>3.3 setCookie</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc  设置Cookie</span></div><div class="line"><span class="comment"> * @param &#123;String&#125; name </span></div><div class="line"><span class="comment"> * @param &#123;String&#125; value </span></div><div class="line"><span class="comment"> * @param &#123;Number&#125; days </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">name, value, days</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">    date.setDate(date.getDate() + days);</div><div class="line">    <span class="built_in">document</span>.cookie = name + <span class="string">'='</span> + value + <span class="string">';expires='</span> + date;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="4-Device"><a href="#4-Device" class="headerlink" title="4.Device"></a>4.Device</h3><h4 id="4-1-getExplore"><a href="#4-1-getExplore" class="headerlink" title="4.1 getExplore"></a>4.1 getExplore</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 获取浏览器类型和版本</span></div><div class="line"><span class="comment"> * @return &#123;String&#125; </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getExplore</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> sys = &#123;&#125;,</div><div class="line">        ua = navigator.userAgent.toLowerCase(),</div><div class="line">        s;</div><div class="line">    (s = ua.match(<span class="regexp">/rv:([\d.]+)\) like gecko/</span>)) ? sys.ie = s[<span class="number">1</span>]:</div><div class="line">        (s = ua.match(<span class="regexp">/msie ([\d\.]+)/</span>)) ? sys.ie = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/edge\/([\d\.]+)/</span>)) ? sys.edge = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/firefox\/([\d\.]+)/</span>)) ? sys.firefox = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/(?:opera|opr).([\d\.]+)/</span>)) ? sys.opera = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/chrome\/([\d\.]+)/</span>)) ? sys.chrome = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/version\/([\d\.]+).*safari/</span>)) ? sys.safari = s[<span class="number">1</span>] : <span class="number">0</span>;</div><div class="line">    <span class="comment">// 根据关系进行判断</span></div><div class="line">    <span class="keyword">if</span> (sys.ie) <span class="keyword">return</span> (<span class="string">'IE: '</span> + sys.ie)</div><div class="line">    <span class="keyword">if</span> (sys.edge) <span class="keyword">return</span> (<span class="string">'EDGE: '</span> + sys.edge)</div><div class="line">    <span class="keyword">if</span> (sys.firefox) <span class="keyword">return</span> (<span class="string">'Firefox: '</span> + sys.firefox)</div><div class="line">    <span class="keyword">if</span> (sys.chrome) <span class="keyword">return</span> (<span class="string">'Chrome: '</span> + sys.chrome)</div><div class="line">    <span class="keyword">if</span> (sys.opera) <span class="keyword">return</span> (<span class="string">'Opera: '</span> + sys.opera)</div><div class="line">    <span class="keyword">if</span> (sys.safari) <span class="keyword">return</span> (<span class="string">'Safari: '</span> + sys.safari)</div><div class="line">    <span class="keyword">return</span> <span class="string">'Unkonwn'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="4-2-getOS"><a href="#4-2-getOS" class="headerlink" title="4.2 getOS"></a>4.2 getOS</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 获取操作系统类型</span></div><div class="line"><span class="comment"> * @return &#123;String&#125; </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getOS</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> userAgent = <span class="string">'navigator'</span> <span class="keyword">in</span> <span class="built_in">window</span> &amp;&amp; <span class="string">'userAgent'</span> <span class="keyword">in</span> navigator &amp;&amp; navigator.userAgent.toLowerCase() || <span class="string">''</span>;</div><div class="line">    <span class="keyword">var</span> vendor = <span class="string">'navigator'</span> <span class="keyword">in</span> <span class="built_in">window</span> &amp;&amp; <span class="string">'vendor'</span> <span class="keyword">in</span> navigator &amp;&amp; navigator.vendor.toLowerCase() || <span class="string">''</span>;</div><div class="line">    <span class="keyword">var</span> appVersion = <span class="string">'navigator'</span> <span class="keyword">in</span> <span class="built_in">window</span> &amp;&amp; <span class="string">'appVersion'</span> <span class="keyword">in</span> navigator &amp;&amp; navigator.appVersion.toLowerCase() || <span class="string">''</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="regexp">/mac/i</span>.test(appVersion)) <span class="keyword">return</span> <span class="string">'MacOSX'</span></div><div class="line">    <span class="keyword">if</span> (<span class="regexp">/win/i</span>.test(appVersion)) <span class="keyword">return</span> <span class="string">'windows'</span></div><div class="line">    <span class="keyword">if</span> (<span class="regexp">/linux/i</span>.test(appVersion)) <span class="keyword">return</span> <span class="string">'linux'</span></div><div class="line">    <span class="keyword">if</span> (<span class="regexp">/iphone/i</span>.test(userAgent) || <span class="regexp">/ipad/i</span>.test(userAgent) || <span class="regexp">/ipod/i</span>.test(userAgent)) <span class="string">'ios'</span></div><div class="line">    <span class="keyword">if</span> (<span class="regexp">/android/i</span>.test(userAgent)) <span class="keyword">return</span> <span class="string">'android'</span></div><div class="line">    <span class="keyword">if</span> (<span class="regexp">/win/i</span>.test(appVersion) &amp;&amp; <span class="regexp">/phone/i</span>.test(userAgent)) <span class="keyword">return</span> <span class="string">'windowsPhone'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Dom"><a href="#Dom" class="headerlink" title="Dom"></a>Dom</h3><h4 id="5-1-getScrollTop"><a href="#5-1-getScrollTop" class="headerlink" title="5.1 getScrollTop"></a>5.1 getScrollTop</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 获取滚动条距顶部的距离</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getScrollTop</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (<span class="built_in">document</span>.documentElement &amp;&amp; <span class="built_in">document</span>.documentElement.scrollTop) || <span class="built_in">document</span>.body.scrollTop;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="5-2-offset"><a href="#5-2-offset" class="headerlink" title="5.2 offset"></a>5.2 offset</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc  获取一个元素的距离文档(document)的位置，类似jQ中的offset()</span></div><div class="line"><span class="comment"> * @param &#123;HTMLElement&#125; ele </span></div><div class="line"><span class="comment"> * @returns &#123; &#123;left: number, top: number&#125; &#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">offset</span>(<span class="params">ele</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> pos = &#123;</div><div class="line">        left: <span class="number">0</span>,</div><div class="line">        top: <span class="number">0</span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">while</span> (ele) &#123;</div><div class="line">        pos.left += ele.offsetLeft;</div><div class="line">        pos.top += ele.offsetTop;</div><div class="line">        ele = ele.offsetParent;</div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">return</span> pos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="5-3-scrollTo"><a href="#5-3-scrollTo" class="headerlink" title="5.3 scrollTo"></a>5.3 scrollTo</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> getScrollTop = <span class="built_in">require</span>(<span class="string">'./getScrollTop'</span>);</div><div class="line"><span class="keyword">var</span> setScrollTop = <span class="built_in">require</span>(<span class="string">'./setScrollTop'</span>);</div><div class="line"><span class="keyword">var</span> requestAnimFrame = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">window</span>.requestAnimationFrame ||</div><div class="line">        <span class="built_in">window</span>.webkitRequestAnimationFrame ||</div><div class="line">        <span class="built_in">window</span>.mozRequestAnimationFrame ||</div><div class="line">        <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</div><div class="line">            <span class="built_in">window</span>.setTimeout(callback, <span class="number">1000</span> / <span class="number">60</span>);</div><div class="line">        &#125;;</div><div class="line">&#125;)();</div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc  在$&#123;duration&#125;时间内，滚动条平滑滚动到$&#123;to&#125;指定位置</span></div><div class="line"><span class="comment"> * @param &#123;Number&#125; to </span></div><div class="line"><span class="comment"> * @param &#123;Number&#125; duration </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">scrollTo</span>(<span class="params">to, duration</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (duration &lt; <span class="number">0</span>) &#123;</div><div class="line">        setScrollTop(to);</div><div class="line">        <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> diff = to - getScrollTop();</div><div class="line">    <span class="keyword">if</span> (diff === <span class="number">0</span>) <span class="keyword">return</span></div><div class="line">    <span class="keyword">var</span> step = diff / duration * <span class="number">10</span>;</div><div class="line">    requestAnimationFrame(</div><div class="line">        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(step) &gt; <span class="built_in">Math</span>.abs(diff)) &#123;</div><div class="line">                setScrollTop(getScrollTop() + diff);</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            setScrollTop(getScrollTop() + step);</div><div class="line">            <span class="keyword">if</span> (diff &gt; <span class="number">0</span> &amp;&amp; getScrollTop() &gt;= to || diff &lt; <span class="number">0</span> &amp;&amp; getScrollTop() &lt;= to) &#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            scrollTo(to, duration - <span class="number">16</span>);</div><div class="line">        &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="5-4-setScrollTop"><a href="#5-4-setScrollTop" class="headerlink" title="5.4 setScrollTop"></a>5.4 setScrollTop</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 设置滚动条距顶部的距离</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setScrollTop</span>(<span class="params">value</span>) </span>&#123;</div><div class="line">    <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, value);</div><div class="line">    <span class="keyword">return</span> value;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="6-Keycode"><a href="#6-Keycode" class="headerlink" title="6.Keycode"></a>6.Keycode</h3><h4 id="6-1-getKeyName"><a href="#6-1-getKeyName" class="headerlink" title="6.1 getKeyName"></a>6.1 getKeyName</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> keyCodeMap = &#123;</div><div class="line">    <span class="number">8</span>: <span class="string">'Backspace'</span>,</div><div class="line">    <span class="number">9</span>: <span class="string">'Tab'</span>,</div><div class="line">    <span class="number">13</span>: <span class="string">'Enter'</span>,</div><div class="line">    <span class="number">16</span>: <span class="string">'Shift'</span>,</div><div class="line">    <span class="number">17</span>: <span class="string">'Ctrl'</span>,</div><div class="line">    <span class="number">18</span>: <span class="string">'Alt'</span>,</div><div class="line">    <span class="number">19</span>: <span class="string">'Pause'</span>,</div><div class="line">    <span class="number">20</span>: <span class="string">'Caps Lock'</span>,</div><div class="line">    <span class="number">27</span>: <span class="string">'Escape'</span>,</div><div class="line">    <span class="number">32</span>: <span class="string">'Space'</span>,</div><div class="line">    <span class="number">33</span>: <span class="string">'Page Up'</span>,</div><div class="line">    <span class="number">34</span>: <span class="string">'Page Down'</span>,</div><div class="line">    <span class="number">35</span>: <span class="string">'End'</span>,</div><div class="line">    <span class="number">36</span>: <span class="string">'Home'</span>,</div><div class="line">    <span class="number">37</span>: <span class="string">'Left'</span>,</div><div class="line">    <span class="number">38</span>: <span class="string">'Up'</span>,</div><div class="line">    <span class="number">39</span>: <span class="string">'Right'</span>,</div><div class="line">    <span class="number">40</span>: <span class="string">'Down'</span>,</div><div class="line">    <span class="number">42</span>: <span class="string">'Print Screen'</span>,</div><div class="line">    <span class="number">45</span>: <span class="string">'Insert'</span>,</div><div class="line">    <span class="number">46</span>: <span class="string">'Delete'</span>,</div><div class="line"></div><div class="line">    <span class="number">48</span>: <span class="string">'0'</span>,</div><div class="line">    <span class="number">49</span>: <span class="string">'1'</span>,</div><div class="line">    <span class="number">50</span>: <span class="string">'2'</span>,</div><div class="line">    <span class="number">51</span>: <span class="string">'3'</span>,</div><div class="line">    <span class="number">52</span>: <span class="string">'4'</span>,</div><div class="line">    <span class="number">53</span>: <span class="string">'5'</span>,</div><div class="line">    <span class="number">54</span>: <span class="string">'6'</span>,</div><div class="line">    <span class="number">55</span>: <span class="string">'7'</span>,</div><div class="line">    <span class="number">56</span>: <span class="string">'8'</span>,</div><div class="line">    <span class="number">57</span>: <span class="string">'9'</span>,</div><div class="line"></div><div class="line">    <span class="number">65</span>: <span class="string">'A'</span>,</div><div class="line">    <span class="number">66</span>: <span class="string">'B'</span>,</div><div class="line">    <span class="number">67</span>: <span class="string">'C'</span>,</div><div class="line">    <span class="number">68</span>: <span class="string">'D'</span>,</div><div class="line">    <span class="number">69</span>: <span class="string">'E'</span>,</div><div class="line">    <span class="number">70</span>: <span class="string">'F'</span>,</div><div class="line">    <span class="number">71</span>: <span class="string">'G'</span>,</div><div class="line">    <span class="number">72</span>: <span class="string">'H'</span>,</div><div class="line">    <span class="number">73</span>: <span class="string">'I'</span>,</div><div class="line">    <span class="number">74</span>: <span class="string">'J'</span>,</div><div class="line">    <span class="number">75</span>: <span class="string">'K'</span>,</div><div class="line">    <span class="number">76</span>: <span class="string">'L'</span>,</div><div class="line">    <span class="number">77</span>: <span class="string">'M'</span>,</div><div class="line">    <span class="number">78</span>: <span class="string">'N'</span>,</div><div class="line">    <span class="number">79</span>: <span class="string">'O'</span>,</div><div class="line">    <span class="number">80</span>: <span class="string">'P'</span>,</div><div class="line">    <span class="number">81</span>: <span class="string">'Q'</span>,</div><div class="line">    <span class="number">82</span>: <span class="string">'R'</span>,</div><div class="line">    <span class="number">83</span>: <span class="string">'S'</span>,</div><div class="line">    <span class="number">84</span>: <span class="string">'T'</span>,</div><div class="line">    <span class="number">85</span>: <span class="string">'U'</span>,</div><div class="line">    <span class="number">86</span>: <span class="string">'V'</span>,</div><div class="line">    <span class="number">87</span>: <span class="string">'W'</span>,</div><div class="line">    <span class="number">88</span>: <span class="string">'X'</span>,</div><div class="line">    <span class="number">89</span>: <span class="string">'Y'</span>,</div><div class="line">    <span class="number">90</span>: <span class="string">'Z'</span>,</div><div class="line"></div><div class="line">    <span class="number">91</span>: <span class="string">'Windows'</span>,</div><div class="line">    <span class="number">93</span>: <span class="string">'Right Click'</span>,</div><div class="line"></div><div class="line">    <span class="number">96</span>: <span class="string">'Numpad 0'</span>,</div><div class="line">    <span class="number">97</span>: <span class="string">'Numpad 1'</span>,</div><div class="line">    <span class="number">98</span>: <span class="string">'Numpad 2'</span>,</div><div class="line">    <span class="number">99</span>: <span class="string">'Numpad 3'</span>,</div><div class="line">    <span class="number">100</span>: <span class="string">'Numpad 4'</span>,</div><div class="line">    <span class="number">101</span>: <span class="string">'Numpad 5'</span>,</div><div class="line">    <span class="number">102</span>: <span class="string">'Numpad 6'</span>,</div><div class="line">    <span class="number">103</span>: <span class="string">'Numpad 7'</span>,</div><div class="line">    <span class="number">104</span>: <span class="string">'Numpad 8'</span>,</div><div class="line">    <span class="number">105</span>: <span class="string">'Numpad 9'</span>,</div><div class="line">    <span class="number">106</span>: <span class="string">'Numpad *'</span>,</div><div class="line">    <span class="number">107</span>: <span class="string">'Numpad +'</span>,</div><div class="line">    <span class="number">109</span>: <span class="string">'Numpad -'</span>,</div><div class="line">    <span class="number">110</span>: <span class="string">'Numpad .'</span>,</div><div class="line">    <span class="number">111</span>: <span class="string">'Numpad /'</span>,</div><div class="line"></div><div class="line">    <span class="number">112</span>: <span class="string">'F1'</span>,</div><div class="line">    <span class="number">113</span>: <span class="string">'F2'</span>,</div><div class="line">    <span class="number">114</span>: <span class="string">'F3'</span>,</div><div class="line">    <span class="number">115</span>: <span class="string">'F4'</span>,</div><div class="line">    <span class="number">116</span>: <span class="string">'F5'</span>,</div><div class="line">    <span class="number">117</span>: <span class="string">'F6'</span>,</div><div class="line">    <span class="number">118</span>: <span class="string">'F7'</span>,</div><div class="line">    <span class="number">119</span>: <span class="string">'F8'</span>,</div><div class="line">    <span class="number">120</span>: <span class="string">'F9'</span>,</div><div class="line">    <span class="number">121</span>: <span class="string">'F10'</span>,</div><div class="line">    <span class="number">122</span>: <span class="string">'F11'</span>,</div><div class="line">    <span class="number">123</span>: <span class="string">'F12'</span>,</div><div class="line"></div><div class="line">    <span class="number">144</span>: <span class="string">'Num Lock'</span>,</div><div class="line">    <span class="number">145</span>: <span class="string">'Scroll Lock'</span>,</div><div class="line">    <span class="number">182</span>: <span class="string">'My Computer'</span>,</div><div class="line">    <span class="number">183</span>: <span class="string">'My Calculator'</span>,</div><div class="line">    <span class="number">186</span>: <span class="string">';'</span>,</div><div class="line">    <span class="number">187</span>: <span class="string">'='</span>,</div><div class="line">    <span class="number">188</span>: <span class="string">','</span>,</div><div class="line">    <span class="number">189</span>: <span class="string">'-'</span>,</div><div class="line">    <span class="number">190</span>: <span class="string">'.'</span>,</div><div class="line">    <span class="number">191</span>: <span class="string">'/'</span>,</div><div class="line">    <span class="number">192</span>: <span class="string">'`'</span>,</div><div class="line">    <span class="number">219</span>: <span class="string">'['</span>,</div><div class="line">    <span class="number">220</span>: <span class="string">'\\'</span>,</div><div class="line">    <span class="number">221</span>: <span class="string">']'</span>,</div><div class="line">    <span class="number">222</span>: <span class="string">'\''</span></div><div class="line">&#125;;</div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * @desc 根据keycode获得键名</span></div><div class="line"><span class="comment"> * @param  &#123;Number&#125; keycode </span></div><div class="line"><span class="comment"> * @return &#123;String&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getKeyName</span>(<span class="params">keycode</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (keyCodeMap[keycode]) &#123;</div><div class="line">        <span class="keyword">return</span> keyCodeMap[keycode];</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'Unknow Key(Key Code:'</span> + keycode + <span class="string">')'</span>);</div><div class="line">        <span class="keyword">return</span> <span class="string">''</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="7-Object"><a href="#7-Object" class="headerlink" title="7.Object"></a>7.Object</h3><h4 id="7-1-deepClone"><a href="#7-1-deepClone" class="headerlink" title="7.1 deepClone"></a>7.1 deepClone</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * @desc 深拷贝，支持常见类型</span></div><div class="line"><span class="comment">     * @param &#123;Any&#125; values</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">obj</span>)</span>&#123; <span class="comment">//extend -&gt;深度克隆</span></div><div class="line"><span class="comment">//      console.log(obj.push);</span></div><div class="line">        <span class="comment">//var toStr = Object.prototype.toString;</span></div><div class="line">        <span class="comment">//var o = toStr.call(obj) === '[object Array]'?[]:&#123;&#125;;</span></div><div class="line">        <span class="keyword">var</span> o = obj.push?[]:&#123;&#125;;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> obj)&#123;</div><div class="line">            <span class="comment">//判断obj[attr]是不是对象类型的，如果是就再循环。</span></div><div class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> obj[attr] === <span class="string">'object'</span>)&#123;</div><div class="line">                o[attr] =  extend(obj[attr]);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                o[attr] = obj[attr];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> o;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="keyword">var</span> obj2 = extend(obj);</div></pre></td></tr></table></figure>
<h4 id="7-2-isEmptyObject"><a href="#7-2-isEmptyObject" class="headerlink" title="7.2 isEmptyObject"></a>7.2 isEmptyObject</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   判断`obj`是否为空</span></div><div class="line"><span class="comment"> * @param  &#123;Object&#125; obj</span></div><div class="line"><span class="comment"> * @return &#123;Boolean&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isEmptyObject</span>(<span class="params">obj</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!obj || <span class="keyword">typeof</span> obj !== <span class="string">'object'</span> || <span class="built_in">Array</span>.isArray(obj))</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">    <span class="keyword">return</span> !<span class="built_in">Object</span>.keys(obj).length</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="8-Random"><a href="#8-Random" class="headerlink" title="8.Random"></a>8.Random</h3><h4 id="8-1-randomColor"><a href="#8-1-randomColor" class="headerlink" title="8.1 randomColor"></a>8.1 randomColor</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 随机生成颜色</span></div><div class="line"><span class="comment"> * @return &#123;String&#125; </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">'#'</span> + (<span class="string">'00000'</span> + (<span class="built_in">Math</span>.random() * <span class="number">0x1000000</span> &lt;&lt; <span class="number">0</span>).toString(<span class="number">16</span>)).slice(<span class="number">-6</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="8-2-randomNum"><a href="#8-2-randomNum" class="headerlink" title="8.2 randomNum "></a>8.2 randomNum </h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 生成指定范围随机数</span></div><div class="line"><span class="comment"> * @param  &#123;Number&#125; min </span></div><div class="line"><span class="comment"> * @param  &#123;Number&#125; max </span></div><div class="line"><span class="comment"> * @return &#123;Number&#125; </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomNum</span>(<span class="params">min, max</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.floor(min + <span class="built_in">Math</span>.random() * (max - min));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="9-Regexp"><a href="#9-Regexp" class="headerlink" title="9.Regexp"></a>9.Regexp</h3><h4 id="9-1-isEmail"><a href="#9-1-isEmail" class="headerlink" title="9.1 isEmail"></a>9.1 isEmail</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   判断是否为邮箱地址</span></div><div class="line"><span class="comment"> * @param  &#123;String&#125;  str</span></div><div class="line"><span class="comment"> * @return &#123;Boolean&#125; </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isEmail</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="regexp">/\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/</span>.test(str);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="9-2-isIdCard"><a href="#9-2-isIdCard" class="headerlink" title="9.2 isIdCard"></a>9.2 isIdCard</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc  判断是否为身份证号</span></div><div class="line"><span class="comment"> * @param  &#123;String|Number&#125; str </span></div><div class="line"><span class="comment"> * @return &#123;Boolean&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isIdCard</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="regexp">/^(^[1-9]\d&#123;7&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d&#123;3&#125;$)|(^[1-9]\d&#123;5&#125;[1-9]\d&#123;3&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d&#123;4&#125;)|\d&#123;3&#125;[Xx])$)$/</span>.test(str)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="9-3-isPhoneNum"><a href="#9-3-isPhoneNum" class="headerlink" title="9.3 isPhoneNum"></a>9.3 isPhoneNum</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   判断是否为手机号</span></div><div class="line"><span class="comment"> * @param  &#123;String|Number&#125; str </span></div><div class="line"><span class="comment"> * @return &#123;Boolean&#125; </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPhoneNum</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="regexp">/^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>.test(str)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="9-4-isUrl"><a href="#9-4-isUrl" class="headerlink" title="9.4 isUrl"></a>9.4 isUrl</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   判断是否为URL地址</span></div><div class="line"><span class="comment"> * @param  &#123;String&#125; str </span></div><div class="line"><span class="comment"> * @return &#123;Boolean&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isUrl</span>(<span class="params">str</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="regexp">/[-a-zA-Z0-9@:%._\+~#=]&#123;2,256&#125;\.[a-z]&#123;2,6&#125;\b([-a-zA-Z0-9@:%_\+.~#?&amp;//=]*)/i</span>.test(str);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="10-String"><a href="#10-String" class="headerlink" title="10.String"></a>10.String</h3><h4 id="10-1-digitUppercase"><a href="#10-1-digitUppercase" class="headerlink" title="10.1 digitUppercase"></a>10.1 digitUppercase</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   现金额转大写</span></div><div class="line"><span class="comment"> * @param  &#123;Number&#125; n </span></div><div class="line"><span class="comment"> * @return &#123;String&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">digitUppercase</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> fraction = [<span class="string">'角'</span>, <span class="string">'分'</span>];</div><div class="line">    <span class="keyword">var</span> digit = [</div><div class="line">        <span class="string">'零'</span>, <span class="string">'壹'</span>, <span class="string">'贰'</span>, <span class="string">'叁'</span>, <span class="string">'肆'</span>,</div><div class="line">        <span class="string">'伍'</span>, <span class="string">'陆'</span>, <span class="string">'柒'</span>, <span class="string">'捌'</span>, <span class="string">'玖'</span></div><div class="line">    ];</div><div class="line">    <span class="keyword">var</span> unit = [</div><div class="line">        [<span class="string">'元'</span>, <span class="string">'万'</span>, <span class="string">'亿'</span>],</div><div class="line">        [<span class="string">''</span>, <span class="string">'拾'</span>, <span class="string">'佰'</span>, <span class="string">'仟'</span>]</div><div class="line">    ];</div><div class="line">    <span class="keyword">var</span> head = n &lt; <span class="number">0</span> ? <span class="string">'欠'</span> : <span class="string">''</span>;</div><div class="line">    n = <span class="built_in">Math</span>.abs(n);</div><div class="line">    <span class="keyword">var</span> s = <span class="string">''</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; fraction.length; i++) &#123;</div><div class="line">        s += (digit[<span class="built_in">Math</span>.floor(n * <span class="number">10</span> * <span class="built_in">Math</span>.pow(<span class="number">10</span>, i)) % <span class="number">10</span>] + fraction[i]).replace(<span class="regexp">/零./</span>, <span class="string">''</span>);</div><div class="line">    &#125;</div><div class="line">    s = s || <span class="string">'整'</span>;</div><div class="line">    n = <span class="built_in">Math</span>.floor(n);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; unit[<span class="number">0</span>].length &amp;&amp; n &gt; <span class="number">0</span>; i++) &#123;</div><div class="line">        <span class="keyword">var</span> p = <span class="string">''</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; unit[<span class="number">1</span>].length &amp;&amp; n &gt; <span class="number">0</span>; j++) &#123;</div><div class="line">            p = digit[n % <span class="number">10</span>] + unit[<span class="number">1</span>][j] + p;</div><div class="line">            n = <span class="built_in">Math</span>.floor(n / <span class="number">10</span>);</div><div class="line">        &#125;</div><div class="line">        s = p.replace(<span class="regexp">/(零.)*零$/</span>, <span class="string">''</span>).replace(<span class="regexp">/^$/</span>, <span class="string">'零'</span>) + unit[<span class="number">0</span>][i] + s;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> head + s.replace(<span class="regexp">/(零.)*零元/</span>, <span class="string">'元'</span>)</div><div class="line">        .replace(<span class="regexp">/(零.)+/g</span>, <span class="string">'零'</span>)</div><div class="line">        .replace(<span class="regexp">/^整$/</span>, <span class="string">'零元整'</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="11-Support"><a href="#11-Support" class="headerlink" title="11.Support"></a>11.Support</h3><h4 id="11-1-isSupportWebP"><a href="#11-1-isSupportWebP" class="headerlink" title="11.1 isSupportWebP"></a>11.1 isSupportWebP</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc 判断浏览器是否支持webP格式图片</span></div><div class="line"><span class="comment"> * @return &#123;Boolean&#125; </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isSupportWebP</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> !![].map &amp;&amp; <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>).toDataURL(<span class="string">'image/webp'</span>).indexOf(<span class="string">'data:image/webp'</span>) == <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="12-Time"><a href="#12-Time" class="headerlink" title="12.Time"></a>12.Time</h3><h4 id="12-1-formatPassTime"><a href="#12-1-formatPassTime" class="headerlink" title="12.1 formatPassTime"></a>12.1 formatPassTime</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * @desc   格式化$&#123;startTime&#125;距现在的已过时间</span></div><div class="line"><span class="comment"> * @param  &#123;Date&#125; startTime </span></div><div class="line"><span class="comment"> * @return &#123;String&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatPassTime</span>(<span class="params">startTime</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> currentTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()),</div><div class="line">        time = currentTime - startTime,</div><div class="line">        day = <span class="built_in">parseInt</span>(time / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>)),</div><div class="line">        hour = <span class="built_in">parseInt</span>(time / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>)),</div><div class="line">        min = <span class="built_in">parseInt</span>(time / (<span class="number">1000</span> * <span class="number">60</span>)),</div><div class="line">        month = <span class="built_in">parseInt</span>(day / <span class="number">30</span>),</div><div class="line">        year = <span class="built_in">parseInt</span>(month / <span class="number">12</span>);</div><div class="line">    <span class="keyword">if</span> (year) <span class="keyword">return</span> year + <span class="string">"年前"</span></div><div class="line">    <span class="keyword">if</span> (month) <span class="keyword">return</span> month + <span class="string">"个月前"</span></div><div class="line">    <span class="keyword">if</span> (day) <span class="keyword">return</span> day + <span class="string">"天前"</span></div><div class="line">    <span class="keyword">if</span> (hour) <span class="keyword">return</span> hour + <span class="string">"小时前"</span></div><div class="line">    <span class="keyword">if</span> (min) <span class="keyword">return</span> min + <span class="string">"分钟前"</span></div><div class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="string">'刚刚'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="12-2-formatRemainTime"><a href="#12-2-formatRemainTime" class="headerlink" title="12.2 formatRemainTime"></a>12.2 formatRemainTime</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   格式化现在距$&#123;endTime&#125;的剩余时间</span></div><div class="line"><span class="comment"> * @param  &#123;Date&#125; endTime  </span></div><div class="line"><span class="comment"> * @return &#123;String&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatRemainTime</span>(<span class="params">endTime</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> startDate = <span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">//开始时间</span></div><div class="line">    <span class="keyword">var</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>(endTime); <span class="comment">//结束时间</span></div><div class="line">    <span class="keyword">var</span> t = endDate.getTime() - startDate.getTime(); <span class="comment">//时间差</span></div><div class="line">    <span class="keyword">var</span> d = <span class="number">0</span>,</div><div class="line">        h = <span class="number">0</span>,</div><div class="line">        m = <span class="number">0</span>,</div><div class="line">        s = <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span> (t &gt;= <span class="number">0</span>) &#123;</div><div class="line">        d = <span class="built_in">Math</span>.floor(t / <span class="number">1000</span> / <span class="number">3600</span> / <span class="number">24</span>);</div><div class="line">        h = <span class="built_in">Math</span>.floor(t / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);</div><div class="line">        m = <span class="built_in">Math</span>.floor(t / <span class="number">1000</span> / <span class="number">60</span> % <span class="number">60</span>);</div><div class="line">        s = <span class="built_in">Math</span>.floor(t / <span class="number">1000</span> % <span class="number">60</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> d + <span class="string">"天 "</span> + h + <span class="string">"小时 "</span> + m + <span class="string">"分钟 "</span> + s + <span class="string">"秒"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="13-Url"><a href="#13-Url" class="headerlink" title="13.Url"></a>13.Url</h3><h4 id="13-1-parseQueryString"><a href="#13-1-parseQueryString" class="headerlink" title="13.1 parseQueryString"></a>13.1 parseQueryString</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   url参数转对象</span></div><div class="line"><span class="comment"> * @param  &#123;String&#125; url  default: window.location.href</span></div><div class="line"><span class="comment"> * @return &#123;Object&#125; </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseQueryString</span>(<span class="params">url</span>) </span>&#123;</div><div class="line">    url = url == <span class="literal">null</span> ? <span class="built_in">window</span>.location.href : url</div><div class="line">    <span class="keyword">var</span> search = url.substring(url.lastIndexOf(<span class="string">'?'</span>) + <span class="number">1</span>)</div><div class="line">    <span class="keyword">if</span> (!search) &#123;</div><div class="line">        <span class="keyword">return</span> &#123;&#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(<span class="string">'&#123;"'</span> + <span class="built_in">decodeURIComponent</span>(search).replace(<span class="regexp">/"/g</span>, <span class="string">'\\"'</span>).replace(<span class="regexp">/&amp;/g</span>, <span class="string">'","'</span>).replace(<span class="regexp">/=/g</span>, <span class="string">'":"'</span>) + <span class="string">'"&#125;'</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="13-2-stringfyQueryString"><a href="#13-2-stringfyQueryString" class="headerlink" title="13.2 stringfyQueryString"></a>13.2 stringfyQueryString</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @desc   对象序列化</span></div><div class="line"><span class="comment"> * @param  &#123;Object&#125; obj </span></div><div class="line"><span class="comment"> * @return &#123;String&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">stringfyQueryString</span>(<span class="params">obj</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!obj) <span class="keyword">return</span> <span class="string">''</span>;</div><div class="line">    <span class="keyword">var</span> pairs = [];</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</div><div class="line">        <span class="keyword">var</span> value = obj[key];</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (value <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; value.length; ++i) &#123;</div><div class="line">                pairs.push(<span class="built_in">encodeURIComponent</span>(key + <span class="string">'['</span> + i + <span class="string">']'</span>) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(value[i]));</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        pairs.push(<span class="built_in">encodeURIComponent</span>(key) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(obj[key]));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> pairs.join(<span class="string">'&amp;'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>作者：SlaneYang</li>
<li>来源：<a href="https://segmentfault.com/a/1190000011966867" target="_blank" rel="external">https://segmentfault.com/a/1190000011966867</a></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 转载收藏 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[页面加载loading]]></title>
      <url>/blogs/2017/12/01/loadding/</url>
      <content type="html"><![CDATA[<p>总结几种常见的Loading效果</p>
<h4 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h4><p><img src="https://songzhiguo.github.io/lib/images/1461983-be7394f8fda15c9b.gif" alt=""><br><a id="more"></a></p>
<p>代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.loading</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">80px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">        <span class="attribute">margin-top</span>:<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">display</span>: inline-block;</div><div class="line">        <span class="attribute">width</span>: <span class="number">8px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">        <span class="attribute">background</span>: lightgreen;</div><div class="line">        <span class="attribute">-webkit-animation</span>: load <span class="number">1s</span> ease infinite;</div><div class="line">    &#125;</div><div class="line">    @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> load&#123;</div><div class="line">        0%,100%&#123;</div><div class="line">            <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">            <span class="attribute">background</span>: lightgreen;</div><div class="line">        &#125;</div><div class="line">        50%&#123;</div><div class="line">            <span class="attribute">height</span>: <span class="number">70px</span>;</div><div class="line">            <span class="attribute">margin</span>: -<span class="number">15px</span> <span class="number">0</span>;</div><div class="line">            <span class="attribute">background</span>: lightblue;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.2s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.4s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.6s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.8s</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="第二到四种效果："><a href="#第二到四种效果：" class="headerlink" title="第二到四种效果："></a>第二到四种效果：</h4><p><img src="https://songzhiguo.github.io/lib/images/1461983-0babe9f08f43ce14.gif" alt=""></p>
<p><img src="https://songzhiguo.github.io/lib/images/1461983-2ffd4c0454e3cb6e.gif" alt=""></p>
<p><img src="https://songzhiguo.github.io/lib/images/1461983-41ccc96f189dd207.gif" alt=""></p>
<p>代码如下</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.loading</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">        <span class="attribute">margin-top</span>:<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">display</span>: inline-block;</div><div class="line">        <span class="attribute">width</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">5px</span>;</div><div class="line">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">        <span class="attribute">background</span>: lightgreen;</div><div class="line">        <span class="attribute">-webkit-animation</span>: load <span class="number">1.04s</span> ease infinite;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span>&#123;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0px</span>; </div><div class="line">    &#125;</div><div class="line">    @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> load&#123;</div><div class="line">        0%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        100%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.13s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.26s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.39s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.52s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.65s</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.loading</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">        <span class="attribute">margin-top</span>:<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">display</span>: inline-block;</div><div class="line">        <span class="attribute">width</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">5px</span>;</div><div class="line">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">        <span class="attribute">background</span>: lightgreen;</div><div class="line">        <span class="attribute">-webkit-animation</span>: load <span class="number">1.04s</span> ease infinite;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span>&#123;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0px</span>; </div><div class="line">    &#125;</div><div class="line">    @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> load&#123;</div><div class="line">        0%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">            <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(1.3);</div><div class="line">        &#125;</div><div class="line">        100%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">0.2</span>;</div><div class="line">            <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(.3);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.13s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.26s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.39s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.52s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.65s</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.loading</span>&#123;</div><div class="line">            <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">            <span class="attribute">height</span>: <span class="number">15px</span>;</div><div class="line">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">            <span class="attribute">position</span>: relative;</div><div class="line">            <span class="attribute">margin-top</span>:<span class="number">100px</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.loading</span> <span class="selector-tag">span</span>&#123;</div><div class="line">            <span class="attribute">position</span>: absolute;</div><div class="line">            <span class="attribute">width</span>: <span class="number">15px</span>;</div><div class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">            <span class="attribute">background</span>: lightgreen;</div><div class="line">            <span class="attribute">-webkit-animation</span>: load <span class="number">1.04s</span> ease-in infinite alternate;</div><div class="line">        &#125;</div><div class="line">        @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> load&#123;</div><div class="line">            0%&#123;</div><div class="line">                <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">                <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(0px);</div><div class="line">            &#125;</div><div class="line">            100%&#123;</div><div class="line">                <span class="attribute">opacity</span>: <span class="number">0.2</span>;</div><div class="line">                <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(150px);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</div><div class="line">            <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.13s</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</div><div class="line">            <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.26s</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</div><div class="line">            <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.39s</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</div><div class="line">            <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.52s</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</div><div class="line">            <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.65s</span>;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h4 id="第五到七种效果："><a href="#第五到七种效果：" class="headerlink" title="第五到七种效果："></a>第五到七种效果：</h4><p><img src="https://songzhiguo.github.io/lib/images/1461983-e32e01b060621dd8.gif" alt=""></p>
<p><img src="https://songzhiguo.github.io/lib/images/1461983-b59f7392832d5bdf.gif" alt=""></p>
<p><img src="https://songzhiguo.github.io/lib/images/1461983-0ec58373547f1d15.gif" alt=""></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.loading</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">        <span class="attribute">margin-top</span>:<span class="number">100px</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">display</span>: inline-block;</div><div class="line">        <span class="attribute">width</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">5px</span>;</div><div class="line">        <span class="attribute">background</span>: lightgreen;</div><div class="line">        <span class="attribute">-webkit-animation</span>: load <span class="number">1.04s</span> ease infinite;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span>&#123;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0px</span>; </div><div class="line">    &#125;</div><div class="line">    @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> load&#123;</div><div class="line">        0%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        100%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.13s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.26s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.39s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.52s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.65s</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.loading</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">        <span class="attribute">margin-top</span>:<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">display</span>: inline-block;</div><div class="line">        <span class="attribute">width</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">5px</span>;</div><div class="line">        <span class="attribute">background</span>: lightgreen;</div><div class="line">        <span class="attribute">-webkit-transform-origin</span>: right bottom;</div><div class="line">        <span class="attribute">-webkit-animation</span>: load <span class="number">1s</span> ease infinite;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span>&#123;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0px</span>; </div><div class="line">    &#125;</div><div class="line">    @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> load&#123;</div><div class="line">        0%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        100%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">            <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(90deg);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.13s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.26s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.39s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.52s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.65s</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.loading</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">150px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">        <span class="attribute">margin-top</span>:<span class="number">100px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">display</span>: inline-block;</div><div class="line">        <span class="attribute">width</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">5px</span>;</div><div class="line">        <span class="attribute">background</span>: lightgreen;</div><div class="line">        <span class="attribute">-webkit-transform-origin</span>: right bottom;</div><div class="line">        <span class="attribute">-webkit-animation</span>: load <span class="number">1s</span> ease infinite;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:last-child</span>&#123;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">0px</span>; </div><div class="line">    &#125;</div><div class="line">    @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> load&#123;</div><div class="line">        0%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">            <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(1);</div><div class="line">        &#125;</div><div class="line">        100%&#123;</div><div class="line">            <span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">            <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(90deg) <span class="built_in">scale</span>(.3);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.13s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.26s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.39s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.52s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</div><div class="line">        <span class="attribute">-webkit-animation-delay</span>:<span class="number">0.65s</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>作者：JR93<br>链接：<a href="http://www.jianshu.com/p/6ac3e3e12d61" target="_blank" rel="external"></a><br>來源：简书</p>
]]></content>
      
        <categories>
            
            <category> 转载收藏 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[移动端背景音乐自动播放问题]]></title>
      <url>/blogs/2017/11/23/autoplay/</url>
      <content type="html"><![CDATA[<h4 id="大部分IOS系统和少部分Android微信不支持自动播放"><a href="#大部分IOS系统和少部分Android微信不支持自动播放" class="headerlink" title="大部分IOS系统和少部分Android微信不支持自动播放"></a>大部分IOS系统和少部分Android微信不支持自动播放</h4><p>解决方案：监听WeixinJSBridgeReady事件、DOMContentLoaded事件<br><a id="more"></a></p>
<p>微信的JS API建立在微信壳浏览器的内置JS对象WeixinJSBridge上，WeixinJSBridge并不是WebView一打开就有了，客户端需要初始化这个对象，当这个对象准备好的时候，客户端会抛出事件”WeixinJSBridgeReady”。</p>
<p>发现部分机型，监听DOMContentLoaded和load事件，在回调中也可以播放音乐；<br>所以，为了保险起见，可以同时监听两个事件，以增强其适用性。<br>代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'DOMContentLoaded'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">audioAutoPlay</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">'bg-music'</span>);</div><div class="line">            audio.play();</div><div class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">"WeixinJSBridgeReady"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            audio.play();</div><div class="line">        &#125;, <span class="literal">false</span>);</div><div class="line">    &#125;</div><div class="line">    audioAutoPlay();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 踩坑记录 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[面向对象编程构造函数的继承]]></title>
      <url>/blogs/2017/11/11/oriented/</url>
      <content type="html"><![CDATA[<p>今天要介绍的是，对象之间的”继承”的五种方法。<br><a id="more"></a></p>
<p>比如，现在有一个”动物”对象的构造函数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">this</span>.species = <span class="string">"动物"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>还有一个”猫”对象的构造函数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name,color</span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">this</span>.name = name;</div><div class="line">　　　　<span class="keyword">this</span>.color = color;</div><div class="line">　　&#125;</div></pre></td></tr></table></figure>
<p>怎样才能使”猫”继承”动物”呢？</p>
<h4 id="一、-构造函数绑定"><a href="#一、-构造函数绑定" class="headerlink" title="一、 构造函数绑定"></a>一、 构造函数绑定</h4><p>第一种方法也是最简单的方法，使用call或apply方法，将父对象的构造函数绑定在子对象上，即在子对象构造函数中加一行：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name,color</span>)</span>&#123;</div><div class="line">　　　　Animal.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</div><div class="line">　　　　<span class="keyword">this</span>.name = name;</div><div class="line">　　　　<span class="keyword">this</span>.color = color;</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"大毛"</span>,<span class="string">"黄色"</span>);</div><div class="line">　　alert(cat1.species); <span class="comment">// 动物</span></div></pre></td></tr></table></figure>
<h4 id="二、-prototype模式"><a href="#二、-prototype模式" class="headerlink" title="二、 prototype模式"></a>二、 prototype模式</h4><p>第二种方法更常见，使用prototype属性。</p>
<p>如果”猫”的prototype对象，指向一个Animal的实例，那么所有”猫”的实例，就能继承Animal了。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　　Cat.prototype = <span class="keyword">new</span> Animal();</div><div class="line">　　Cat.prototype.constructor = Cat;</div><div class="line">　　<span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"大毛"</span>,<span class="string">"黄色"</span>);</div><div class="line">　　alert(cat1.species); <span class="comment">// 动物</span></div></pre></td></tr></table></figure>
<p>代码的第一行，我们将Cat的prototype对象指向一个Animal的实例。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Cat.prototype = <span class="keyword">new</span> Animal();</div></pre></td></tr></table></figure>
<p>它相当于完全删除了prototype 对象原先的值，然后赋予一个新值。但是，第二行又是什么意思呢？</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Cat.prototype.constructor = Cat;</div></pre></td></tr></table></figure>
<p>原来，任何一个prototype对象都有一个constructor属性，指向它的构造函数。如果没有”Cat.prototype = new Animal();”这一行，Cat.prototype.constructor是指向Cat的；加了这一行以后，Cat.prototype.constructor指向Animal。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(Cat.prototype.constructor == Animal); <span class="comment">//true</span></div></pre></td></tr></table></figure>
<p>更重要的是，每一个实例也有一个constructor属性，默认调用prototype对象的constructor属性。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(cat1.constructor == Cat.prototype.constructor); <span class="comment">// true</span></div></pre></td></tr></table></figure>
<p>因此，在运行”Cat.prototype = new Animal();”这一行之后，cat1.constructor也指向Animal！</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(cat1.constructor == Animal); <span class="comment">// true</span></div></pre></td></tr></table></figure>
<p>这显然会导致继承链的紊乱（cat1明明是用构造函数Cat生成的），因此我们必须手动纠正，将Cat.prototype对象的constructor值改为Cat。这就是第二行的意思。</p>
<p>这是很重要的一点，编程时务必要遵守。下文都遵循这一点，即如果替换了prototype对象，</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">o.prototype = &#123;&#125;;</div></pre></td></tr></table></figure>
<p>那么，下一步必然是为新的prototype对象加上constructor属性，并将这个属性指回原来的构造函数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">o.prototype.constructor = o;</div></pre></td></tr></table></figure>
<h4 id="三、-直接继承prototype"><a href="#三、-直接继承prototype" class="headerlink" title="三、 直接继承prototype"></a>三、 直接继承prototype</h4><p>第三种方法是对第二种方法的改进。由于Animal对象中，不变的属性都可以直接写入Animal.prototype。所以，我们也可以让Cat()跳过 Animal()，直接继承Animal.prototype。</p>
<p>现在，我们先将Animal对象改写：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params"></span>)</span>&#123; &#125;</div><div class="line">　　Animal.prototype.species = <span class="string">"动物"</span>;</div></pre></td></tr></table></figure>
<p>然后，将Cat的prototype对象，然后指向Animal的prototype对象，这样就完成了继承。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　　Cat.prototype = Animal.prototype;</div><div class="line">　　Cat.prototype.constructor = Cat;</div><div class="line">　　<span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"大毛"</span>,<span class="string">"黄色"</span>);</div><div class="line">　　alert(cat1.species); <span class="comment">// 动物</span></div></pre></td></tr></table></figure>
<p>与前一种方法相比，这样做的优点是效率比较高（不用执行和建立Animal的实例了），比较省内存。缺点是<br>Cat.prototype和Animal.prototype现在指向了同一个对象，那么任何对Cat.prototype的修改，都会反映到Animal.prototype。</p>
<p>所以，上面这一段代码其实是有问题的。请看第二行</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Cat.prototype.constructor = Cat;</div></pre></td></tr></table></figure>
<p>这一句实际上把Animal.prototype对象的constructor属性也改掉了！</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(Animal.prototype.constructor); <span class="comment">// Cat</span></div></pre></td></tr></table></figure>
<h4 id="四、-利用空对象作为中介"><a href="#四、-利用空对象作为中介" class="headerlink" title="四、 利用空对象作为中介"></a>四、 利用空对象作为中介</h4><p>由于”直接继承prototype”存在上述的缺点，所以就有第四种方法，利用一个空对象作为中介。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　　<span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line">　　F.prototype = Animal.prototype;</div><div class="line">　　Cat.prototype = <span class="keyword">new</span> F();</div><div class="line">　　Cat.prototype.constructor = Cat;</div></pre></td></tr></table></figure>
<p>F是空对象，所以几乎不占内存。这时，修改Cat的prototype对象，就不会影响到Animal的prototype对象。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(Animal.prototype.constructor); <span class="comment">// Animal</span></div></pre></td></tr></table></figure>
<p>我们将上面的方法，封装成一个函数，便于使用。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">Child, Parent</span>) </span>&#123;</div><div class="line"></div><div class="line">　　　　<span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line">　　　　F.prototype = Parent.prototype;</div><div class="line">　　　　Child.prototype = <span class="keyword">new</span> F();</div><div class="line">　　　　Child.prototype.constructor = Child;</div><div class="line">　　　　Child.uber = Parent.prototype;</div><div class="line">　　&#125;</div></pre></td></tr></table></figure>
<p>使用的时候，方法如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">　　extend(Cat,Animal);</div><div class="line">　　<span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"大毛"</span>,<span class="string">"黄色"</span>);</div><div class="line">　　alert(cat1.species); <span class="comment">// 动物</span></div></pre></td></tr></table></figure>
<p>这个extend函数，就是YUI库如何实现继承的方法。</p>
<p>另外，说明一点，函数体最后一行</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Child.uber = Parent.prototype;</div></pre></td></tr></table></figure>
<p>意思是为子对象设一个uber属性，这个属性直接指向父对象的prototype属性。（uber是一个德语词，意思是”向上”、”上一层”。）这等于在子对象上打开一条通道，可以直接调用父对象的方法。这一行放在这里，只是为了实现继承的完备性，纯属备用性质。</p>
<h4 id="五、-拷贝继承"><a href="#五、-拷贝继承" class="headerlink" title="五、 拷贝继承"></a>五、 拷贝继承</h4><p>上面是采用prototype对象，实现继承。我们也可以换一种思路，纯粹采用”拷贝”方法实现继承。简单说，如果把父对象的所有属性和方法，拷贝进子对象，不也能够实现继承吗？这样我们就有了第五种方法。</p>
<p>首先，还是把Animal的所有不变属性，都放到它的prototype对象上。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">　　Animal.prototype.species = <span class="string">"动物"</span>;</div></pre></td></tr></table></figure>
<p>然后，再写一个函数，实现属性拷贝的目的。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">extend2</span>(<span class="params">Child, Parent</span>) </span>&#123;</div><div class="line">　　　　<span class="keyword">var</span> p = Parent.prototype;</div><div class="line">　　　　<span class="keyword">var</span> c = Child.prototype;</div><div class="line">　　　　<span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> p) &#123;</div><div class="line">　　　　　　c[i] = p[i];</div><div class="line">　　　　　　&#125;</div><div class="line">　　　　c.uber = p;</div><div class="line">　　&#125;</div></pre></td></tr></table></figure>
<p>这个函数的作用，就是将父对象的prototype对象中的属性，一一拷贝给Child对象的prototype对象。<br>使用的时候，这样写：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">　　extend2(Cat, Animal);</div><div class="line">　　<span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"大毛"</span>,<span class="string">"黄色"</span>);</div><div class="line">　　alert(cat1.species); <span class="comment">// 动物</span></div></pre></td></tr></table></figure>
<p>（完）</p>
]]></content>
      
        <categories>
            
            <category> 转载收藏 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[IOS中position:fixed弹出框中的input出现光标错位的问题]]></title>
      <url>/blogs/2017/11/09/pit/</url>
      <content type="html"><![CDATA[<p>解决方案是 在弹框出现的时候给body添加fixed<br><a id="more"></a></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"body"</span>).css(<span class="string">"position"</span>,<span class="string">"fixed"</span>)</div></pre></td></tr></table></figure>
<p>当弹框消失的时候</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"body"</span>).css(<span class="string">"position"</span>,<span class="string">"relative"</span>)</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 踩坑记录 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Javascript的this用法]]></title>
      <url>/blogs/2017/11/08/this/</url>
      <content type="html"><![CDATA[<p>this是Javascript语言的一个关键字。<br><a id="more"></a></p>
<p>它代表函数运行时，自动生成的一个内部对象，只能在函数内部使用。比如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123; </div><div class="line">　　　　<span class="keyword">this</span>.x = <span class="number">1</span>; </div><div class="line">　　&#125;</div></pre></td></tr></table></figure>
<p>随着函数使用场合的不同，this的值会发生变化。但是有一个总的原则，那就是this指的是，调用函数的那个对象。<br>下面分四种情况，详细讨论this的用法。</p>
<h4 id="情况一：纯粹的函数调用"><a href="#情况一：纯粹的函数调用" class="headerlink" title="情况一：纯粹的函数调用"></a>情况一：纯粹的函数调用</h4><p>这是函数的最通常用法，属于全局性调用，因此this就代表全局对象Global。<br>请看下面这段代码，它的运行结果是1。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">this</span>.x = <span class="number">1</span>;</div><div class="line">　　　　alert(<span class="keyword">this</span>.x);</div><div class="line">　　&#125;</div><div class="line">　　test(); <span class="comment">// 1</span></div></pre></td></tr></table></figure>
<p>为了证明this就是全局对象，我对代码做一些改变：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">　　<span class="keyword">var</span> x = <span class="number">1</span>;</div><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　alert(<span class="keyword">this</span>.x);</div><div class="line">　　&#125;</div><div class="line">　　test(); <span class="comment">// 1</span></div></pre></td></tr></table></figure>
<p>运行结果还是1。再变一下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</div><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">this</span>.x = <span class="number">0</span>;</div><div class="line">　　&#125;</div><div class="line">　　test();</div><div class="line">　　alert(x); <span class="comment">//0</span></div></pre></td></tr></table></figure>
<h4 id="情况二：作为对象方法的调用"><a href="#情况二：作为对象方法的调用" class="headerlink" title="情况二：作为对象方法的调用"></a>情况二：作为对象方法的调用</h4><p>函数还可以作为某个对象的方法调用，这时this就指这个上级对象。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　alert(<span class="keyword">this</span>.x);</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> o = &#123;&#125;;</div><div class="line">　　o.x = <span class="number">1</span>;</div><div class="line">　　o.m = test;</div><div class="line">　　o.m(); <span class="comment">// 1</span></div></pre></td></tr></table></figure>
<h4 id="情况三-作为构造函数调用"><a href="#情况三-作为构造函数调用" class="headerlink" title="情况三 作为构造函数调用"></a>情况三 作为构造函数调用</h4><p>所谓构造函数，就是通过这个函数生成一个新对象（object）。这时，this就指这个新对象。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">this</span>.x = <span class="number">1</span>;</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> o = <span class="keyword">new</span> test();</div><div class="line">　　alert(o.x); <span class="comment">// 1</span></div></pre></td></tr></table></figure>
<p>运行结果为1。为了表明这时this不是全局对象，我对代码做一些改变：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">　<span class="keyword">var</span> x = <span class="number">2</span>;</div><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">this</span>.x = <span class="number">1</span>;</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> o = <span class="keyword">new</span> test();</div><div class="line">　　alert(x); <span class="comment">//2</span></div></pre></td></tr></table></figure>
<p>运行结果为2，表明全局变量x的值根本没变。</p>
<h4 id="情况四-apply调用"><a href="#情况四-apply调用" class="headerlink" title="情况四 apply调用"></a>情况四 apply调用</h4><p>apply()是函数对象的一个方法，它的作用是改变函数的调用对象，它的第一个参数就表示改变后的调用这个函数的对象。因此，this指的就是这第一个参数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">　　<span class="keyword">var</span> x = <span class="number">0</span>;</div><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　alert(<span class="keyword">this</span>.x);</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> o=&#123;&#125;;</div><div class="line">　　o.x = <span class="number">1</span>;</div><div class="line">　　o.m = test;</div><div class="line">　　o.m.apply(); <span class="comment">//0</span></div></pre></td></tr></table></figure>
<p>apply()的参数为空时，默认调用全局对象。因此，这时的运行结果为0，证明this指的是全局对象。<br>如果把最后一行代码修改为</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　o.m.apply(o); <span class="comment">//1</span></div></pre></td></tr></table></figure>
<p>运行结果就变成了1，证明了这时this代表的是对象o。</p>
<p>（完）</p>
]]></content>
      
        <categories>
            
            <category> 转载收藏 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[前端收集]]></title>
      <url>/blogs/2017/11/08/collect/</url>
      <content type="html"><![CDATA[<p>在前端路上摸索前行，在这里分享自己长期关注的前端开发相关的优秀网站、博客、以及活跃开发者。<br><a id="more"></a></p>
<p>====</p>
<h4 id="前端技术文档"><a href="#前端技术文档" class="headerlink" title="前端技术文档"></a>前端技术文档</h4><table>
<thead>
<tr>
<th>名称</th>
<th>地址</th>
<th>介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td>MDN</td>
<td><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/</a></td>
<td>开发者文档</td>
</tr>
<tr>
<td>w3cplus</td>
<td><a href="https://www.w3cplus.com/" target="_blank" rel="external">https://www.w3cplus.com/</a></td>
<td>前端技术文章</td>
</tr>
<tr>
<td>阮一峰</td>
<td><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="external">http://www.ruanyifeng.com/blog/</a></td>
<td>阮一峰网络日志</td>
</tr>
<tr>
<td>ECMAScript 6</td>
<td><a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">http://es6.ruanyifeng.com/</a></td>
<td>ECMAScript 6 入门</td>
</tr>
</tbody>
</table>
<h4 id="css工具"><a href="#css工具" class="headerlink" title="css工具"></a>css工具</h4><table>
<thead>
<tr>
<th>名称</th>
<th>地址</th>
<th>介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td>Iconfont</td>
<td><a href="http://www.iconfont.cn/" target="_blank" rel="external">http://www.iconfont.cn/</a></td>
<td>阿里矢量图标库</td>
</tr>
<tr>
<td>IcoMoon</td>
<td><a href="https://icomoon.io/" target="_blank" rel="external">https://icomoon.io/</a></td>
<td>制作字体图标</td>
</tr>
<tr>
<td>Font Awesome</td>
<td><a href="http://fontawesome.dashgame.com/" target="_blank" rel="external">http://fontawesome.dashgame.com/</a></td>
<td>图标字体库和CSS框架</td>
</tr>
<tr>
<td>Can I use</td>
<td><a href="https://caniuse.com/" target="_blank" rel="external">https://caniuse.com/</a></td>
<td>Support tables for HTML5, CSS3</td>
</tr>
<tr>
<td>Normalize</td>
<td><a href="http://necolas.github.io/normalize.css/" target="_blank" rel="external">http://necolas.github.io/normalize.css/</a></td>
<td>HTML5的替代CSS重置</td>
</tr>
<tr>
<td>Pleeease Play</td>
<td><a href="http://pleeease.io/play/" target="_blank" rel="external">http://pleeease.io/play/</a></td>
<td>CSS3前缀，rem转换，CSS过滤器</td>
</tr>
<tr>
<td>TinyPNG</td>
<td><a href="https://tinypng.com/" target="_blank" rel="external">https://tinypng.com/</a></td>
<td>智能PNG和JPEG压缩</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 折腾工具 </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
